openapi: 3.0.3
info:
  title: Rental Soulmate
  description: This is API documentation for example project Rental Soulmate By Alfian Aditya

  version: 1.0.0
  contact:
    name: Alfian Aditya
    email: alfianadityadwi@gmail.com
servers:
  - description: Swagger API auto mocking
    url: link will be update soon

tags:
  - name: Auth
  - name: Users
  - name: Talents
  - name: Contents
  - name: Whistlist
  - name: Bookings

paths:
  /register:
    post:
      tags:
        - "Auth"
      description: User and talent register new account
      summary: Register new user and talent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Chizuru Ichinose"
                date_of_birth:
                  type: string
                  example: "01-04-1996"
                phone_number:
                  type: string
                  example: "0888444222"
                email:
                  type: string
                  format: email
                  example: "chizichi@example.com"
                password:
                  type: string
                  format: password
                  example: "chizichi123"
      responses:
        201:
          description: success create account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  name: "Chizuru Ichinose"
                  date_of_birth: "01-04-1996"
                  phone_number: "0888444222"
                  email: "chizichi@example.com"
                  password: "chizichi123"
                message: success creating account
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  /login:
    post:
      tags:
        - "Auth"
      description: login to platform
      summary: login for user and talent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "chizichi@example.com"
                password:
                  type: string
                  format: password
                  example: "chizichi123"
      responses:
        200:
          description: success login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  name: "Chizuru Ichinose"
                  email: "chizichi@example.com"
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJ1c2VySUQiOjR9.QTZxERh4CwC_UnL_eJvTi_A_qdLeBZ-IjR4nqoxjodk"
                message: login success
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

components:
  schemas:
    responseObject:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
    responseObjectArr:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        message:
          type: string

  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "user token"
  responses:
    400:
      description: "error from user"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "invalid input"
    500:
      description: "error from server"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: "error from server"
